[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["team-ondo <teamondo1234@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.82.0"
uvicorn = { extras = ["standard"], version = "^0.18.3" }
SQLAlchemy = "^1.4.41"
asyncpg = "^0.26.0"
python-dotenv = "^0.21.0"
requests = "^2.28.1"
gunicorn = "^20.1.0"
psycopg2-binary = "^2.9.3"
pytest = "^7.1.3"
SQLAlchemy-Utils = "^0.38.3"
python-multipart = "^0.0.5"
python-jose = { version = "^3.3.0", extras = ["cryptography"] }
passlib = { version = "^1.7.4", extras = ["bcrypt"] }
email-validator = "^1.2.1"
twilio = "^7.14.0"
Faker = "^14.2.0"
fastapi-socketio = "^0.0.9"

[tool.poetry.group.dev.dependencies]
pysen = "^0.10.2"
black = "21.10b0"
flake8 = "4.0.1"
isort = "5.10.1"
mypy = "^0.971"

[tool.pysen]
version = "0.10.2"

[tool.pysen.lint]
enable_black = true
enable_flake8 = true
enable_isort = true
enable_mypy = true
mypy_preset = "strict"
line_length = 150
py_version = "py310"

[[tool.pysen.lint.mypy_targets]]
paths = ["."]

[tool.mypy]
no_any_return = false

[tool.black] # automatically generated by pysen
# pysen ignores and overwrites any modifications
line-length = 150
target-version = ["py310"]

[tool.isort] # automatically generated by pysen
# pysen ignores and overwrites any modifications
default_section = "THIRDPARTY"
ensure_newline_before_comments = true
force_grid_wrap = 0
force_single_line = false
include_trailing_comma = true
line_length = 150
multi_line_output = 3
use_parentheses = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
